#pragma once

#include <cstdint>

#include "../../sys/math/c_vector.h"

namespace SDK {
    namespace ue::game::humanai {
        struct S_PlayerControllerInput {
            ue::sys::math::C_Vector2 m_unk0;
            ue::sys::math::C_Vector2 m_unk8;
            ue::sys::math::C_Vector2 m_unk16;
            ue::sys::math::C_Vector2 m_unk24;
            ue::sys::math::C_Vector2 m_AimAxis;
            ue::sys::math::C_Vector2 m_unk40;
            ue::sys::math::C_Vector2 m_unk48;
            ue::sys::math::C_Vector2 m_unk56;
            ue::sys::math::C_Vector2 m_unk64;
            ue::sys::math::C_Vector2 m_unk72;
            bool m_CoverDown;
            bool m_CoverSwitch;
            bool m_CoverCornerTurn;
            bool m_CoverExitForward;
            bool m_CoverExit;
            uint8_t m_unk85;
            uint8_t m_unk86;
            bool m_Awareness;
            uint8_t m_unk88;
            uint8_t m_unk89;
            bool m_ActionPress1;
            bool m_ActionPress2;
            uint8_t m_unk92;
            bool m_Crouch;
            uint8_t m_unk94;
            bool m_Stalk;
            float m_DeltaTime;
            uint8_t m_unk100;
            uint8_t m_unk101;
            uint8_t m_unk102;
            uint8_t m_unk103;
            bool m_Sprint;
            uint8_t m_unk105;
            uint8_t m_unk106;
            bool m_SprintHoldDownScheme;
            uint8_t m_unk108;
            bool m_Action1;
            uint8_t m_unk110;
            bool m_Action2;
            float m_unk112;
            bool m_Hit1;
            bool m_GenericAction1;
            bool m_GenericAction2;
            bool m_InteractLong;
            bool m_InteractLong2;
            bool m_InteractLong3;
            bool m_InteractSpecialLong;
            bool m_InteractSpecialLong2;
            bool m_InteractVeryLong;
            bool m_InteractVehicle;
            bool m_InteractVehicle2;
            bool m_DrawAttention;
            bool m_TakePicture;
            bool m_TurretMount;
            bool m_TurretDismount;
            bool m_EnterCar1;
            bool m_EnterCar2;
            bool m_LockPick;
            bool m_CallTaxi;
            bool m_Climb;
            uint8_t m_unk136;
            uint8_t m_unk137;
            bool m_Zoom;
            uint8_t m_unk139;
            uint8_t m_unk140;
            bool m_SharpShooter;
            uint16_t m_pad142;
            uint32_t m_WeaponCommand;
            bool m_PickupWeapon;
            uint8_t m_pad149[3];
            uint32_t m_unk152;
            uint8_t m_unk156;
            uint8_t m_pad157[3];
            uint32_t m_unk160;
            bool m_SwitchExplosives;
            bool m_OnFootSlowMotion;
            uint8_t m_unk166;
            bool m_Menu;
            bool m_Map;
            bool m_WeaponSelectionOpen;
            bool m_WeaponSelectionClose;
            bool m_WeaponSelectionDrop;
            bool m_WeaponSelectionAccept;
            bool m_WeaponSelectionCancel;
            bool m_WeaponSelectionHolster;
            bool m_WeaponSelectionSwitchExplosives;
            bool m_WeaponSelectionUseMedkit;
            uint8_t m_pad177[3];
            float m_VehicleClutch;
            uint8_t m_unk184;
            uint8_t m_unk185;
            bool m_VehicleShiftUp;
            bool m_VehicleShiftDown;
            bool m_VehicleShiftNeutral;
            bool m_CarExit1;
            bool m_CarExit2;
            bool m_CarBailout;
            float m_CarLeftRight;
            float m_CarUp;
            float m_CarDown;
            float m_unk204;
            bool m_Horn;
            bool m_DrivingStyle;
            bool m_Radio;
            bool m_PrevRadio;
            bool m_DriverAim;
            bool m_Exit;
            bool m_Handbrake;
            bool m_RamAction;
            bool m_VehicleAimMode;
            uint8_t m_unk217;
            bool m_VehicleSlowMotion;
            uint8_t m_pad219;
            float m_unk220;
            bool m_TaxiBTW;
            bool m_TaxiStop;
            bool m_TaxiSetLoc;
            bool m_TaxiSkip;
            uint8_t m_unk228;
            bool m_Hit2;
            bool m_Hit3;
            bool m_Hit4;
            bool m_Block;
            bool m_Taunt;
            bool m_WeaponTakedown1;
            bool m_WeaponTakedown2;
            bool m_WeaponGrenadeAim;
            uint8_t m_unk237;
            uint8_t m_unk238;
            uint8_t m_unk239;
            bool m_WeaponSatchelAim;
            bool m_WeaponSatchelPlace;
            bool m_WeaponSatchelDetonate;
            uint8_t m_pad243[5];
            uint32_t m_WeaponTakedown3;
            float m_unk252;
            float m_unk256;
            uint32_t m_pad260;
            bool m_LockPullRotate;
            bool m_LockPullSetPosition;
            bool m_LockPullPry;
            bool m_LockPullCancel;
            bool m_PickupBody;
            bool m_DropBody;
            bool m_CameraSide;
            bool m_ForceCameraSide;
            bool m_AimZoomMode;
            bool m_AimShakeReduce;
            bool m_IntelViewOpen;
            uint8_t m_unk275;
            uint8_t m_unk276;
            bool m_WalkSwitch;
            bool m_Walk;
            uint8_t m_pad279;
            void *m_unk280;
            void *m_unk288;
            uint8_t m_pad296[16];
        };
    } // namespace ue::game::humanai
    static_assert(sizeof(ue::game::humanai::S_PlayerControllerInput) == 312, "Wrong size: ue::game::humanai::S_PlayerControllerInput");
}
